{"version":3,"sources":["resource/logo.png","components/header/Header.js","components/card/Card.js","components/card/MainItemCard.js","pages/Home.js","pages/About.js","components/Menu.js","components/Footer.js","shared/App.js","client/Root.js","registerServiceWorker.js","index.js"],"names":["module","exports","Header","className","Card","props","title","comment","MainItemCard","status","Home","About","Menu","activeStyle","color","src","imgLogo","alt","exact","to","Footer","App","Helmet","path","component","Component","Root","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ee64653e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b9f9065.png\";","import React from 'react';\n\nconst Header = () => {\n    return (\n        <div>\n            <header>\n                <div className=\"headerImg\">d</div>\n                <div className=\"headerTextBox\">\n                    <h1>Link For All</h1><br/>\n                    <h2>모든것을 <b>연결</b>합니다</h2>\n                </div>\n            </header>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Card = (props) => {\n    return (\n        <div className=\"card\">\n            <p>{props.title}</p>\n            <div className=\"line\"></div>\n            <h3>{props.comment}</h3>\n        </div>\n    );\n};\n\nexport default Card;","import React from 'react';\nimport Card from \"./Card\";\n\nconst MainItemCard = (props) => {\n    if(props.status === \"our\"){\n        return (\n            <div className=\"itemBox\">\n                <Card title=\"연결\" comment=\"Link For All, 저희의 슬로건처럼 안전하고 신뢰있는 연결을 지향합니다.\"/>\n                <Card title=\"운영\" comment=\"저희 서비스는 기본 바탕으로 '신뢰'를 우선으로 운영합니다.\"/>\n                <Card title=\"고민\" comment=\"품질과 편의를 최대로 끌어올려 여러 사용자의 입장에서 고민합니다.\"/>\n            </div>\n        );\n    }else if(props.status === \"service\"){\n        return (\n            <div className=\"itemBox\">\n                <Card title=\"연결\" comment=\"Link For All, 저희의 슬로건처럼 안전하고 신뢰있는 연결을 지향합니다.\"/>\n                <Card title=\"운영\" comment=\"저희 서비스는 기본 바탕으로 '신뢰'를 우선으로 운영합니다.\"/>\n                <Card title=\"고민\" comment=\"품질과 편의를 최대로 끌어올려 여러 사용자의 입장에서 고민합니다.\"/>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"itemBox\">\n                <div className=\"readyToUpdate\">\n                    아직 준비중에 있습니다.<br/>\n                    조금만 기다려주시면 감사하겠습니다.\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default MainItemCard;","import React from 'react';\nimport Header from \"../components/header/Header\";\nimport MainItemCard from \"../components/card/MainItemCard\";\n\nconst Home = () => {\n    return (\n        <div>\n            <Header/>\n\n            <div className=\"itemTitleBox\">\n                <p>저희는 생각합니다.</p>\n                <div className=\"itemTitleLine\"> </div>\n            </div>\n\n            <MainItemCard status=\"our\"/>\n\n            <div className=\"itemTitleBox\">\n                <p>서비스</p>\n                <div className=\"itemTitleLine\"> </div>\n            </div>\n            <MainItemCard status=\"none\"/>\n\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\n\nconst About = () => {\n    return (\n        <div>\n            <h2>About</h2>\n        </div>\n    );\n};\n\nexport default About;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport imgLogo from 'resource/logo.png'\n\nconst Menu = () => {\n    const activeStyle={\n        color:\"#333\"\n    };\n\n    return (\n        <div className=\"topMenu\">\n            <div>\n                <img src={imgLogo} alt=\"logo\"/>\n                <ul>\n                    <li><NavLink exact to=\"/\" activeStyle={activeStyle} >회사소개</NavLink></li>\n                    <li><NavLink exact to=\"/about\" activeStyle={activeStyle} >서비스</NavLink></li>\n                    <li><NavLink exact to=\"/about\" activeStyle={activeStyle} >연락</NavLink></li>\n                </ul>\n            </div>\n            <div className=\"clearFloat\"></div>\n        </div>\n    );\n};\n\nexport default Menu;","import React from \"react\";\n\nconst Footer = () =>{\n    return (\n        <div className=\"foo\">\n            <div>\n                엘엔케이 | 대표자:김남규<br/>\n                Copyright©LNK Co.,Ltd. All rights reserved.\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Helmet } from 'react-helmet'\nimport { Home , About } from 'pages';\nimport Menu from \"../components/Menu\";\nimport Footer from \"../components/Footer\";\n\n\nconst TITLE = 'LNK - Link For All';\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Helmet>\n                    <title>{ TITLE }</title>\n                </Helmet>\n                <Menu/>\n                <div>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/about\" component={About}/>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from 'shared/App';\n\nconst Root = () => (\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n);\n\nexport default Root;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW (swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.')\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Root from './client/Root';\nimport registerServiceWorker from './registerServiceWorker';\nimport './style.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}